{"name": "test_data_driven_testing[test100@mailinator.com-1243-Invalid]", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <test_004_DDT.Test_Data_Driven object at 0x0000019084552600>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d00f82c2bf937958c1b8a79e64dcb6c5\")>, username = 'test100@mailinator.com'\npassword = 1243, expected_result = 'Invalid'\n\n    @pytest.mark.parametrize(\"username, password, expected_result\", get_exceldata(path, \"Sheet1\"))\n    def test_data_driven_testing(self, setup, username, password, expected_result):\n        self.logger.info(f\"Starting test for: {username}\")\n    \n        self.driver = setup\n        self.driver.maximize_window()\n    \n        try:\n            # Navigate to Login Page\n            self.driver.get(self.baseurl)\n            self.hp = Homepage(self.driver)\n            self.hp.clickmyaccount()\n            self.hp.clicklogin()\n            self.ma = My_Account_page(self.driver)\n    \n            # Perform Login\n            self.lp = Login(self.driver)\n            self.lp.click_email(username)\n            self.lp.click_password(password)\n            self.lp.click_login()\n    \n            # Capture Screenshot after Login\n            allure.attach(self.driver.get_screenshot_as_png(), name=f\"After_Login_{username}\",\n                          attachment_type=AttachmentType.PNG)\n    \n            # Validate Result\n            self.actual_result = self.lp.myaccount_page()\n            self.logger.info(f\"Actual: {self.actual_result}, Expected: {expected_result}\")\n    \n            # Assert and Capture Failures\n            if self.actual_result.strip().lower() == expected_result.strip().lower():\n                self.logger.info(f\"Test Passed for {username}\")\n                assert True\n            else:\n                self.logger.error(f\"Test Failed for {username}\")\n                allure.attach(self.driver.get_screenshot_as_png(), name=f\"Failure_{username}\",\n                              attachment_type=AttachmentType.PNG)\n>               assert False\nE               assert False\n\ntestCases\\Data Driven Test\\test_004_DDT.py:57: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_004_DDT.Test_Data_Driven object at 0x0000019084552600>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d00f82c2bf937958c1b8a79e64dcb6c5\")>, username = 'test100@mailinator.com'\npassword = 1243, expected_result = 'Invalid'\n\n    @pytest.mark.parametrize(\"username, password, expected_result\", get_exceldata(path, \"Sheet1\"))\n    def test_data_driven_testing(self, setup, username, password, expected_result):\n        self.logger.info(f\"Starting test for: {username}\")\n    \n        self.driver = setup\n        self.driver.maximize_window()\n    \n        try:\n            # Navigate to Login Page\n            self.driver.get(self.baseurl)\n            self.hp = Homepage(self.driver)\n            self.hp.clickmyaccount()\n            self.hp.clicklogin()\n            self.ma = My_Account_page(self.driver)\n    \n            # Perform Login\n            self.lp = Login(self.driver)\n            self.lp.click_email(username)\n            self.lp.click_password(password)\n            self.lp.click_login()\n    \n            # Capture Screenshot after Login\n            allure.attach(self.driver.get_screenshot_as_png(), name=f\"After_Login_{username}\",\n                          attachment_type=AttachmentType.PNG)\n    \n            # Validate Result\n            self.actual_result = self.lp.myaccount_page()\n            self.logger.info(f\"Actual: {self.actual_result}, Expected: {expected_result}\")\n    \n            # Assert and Capture Failures\n            if self.actual_result.strip().lower() == expected_result.strip().lower():\n                self.logger.info(f\"Test Passed for {username}\")\n                assert True\n            else:\n                self.logger.error(f\"Test Failed for {username}\")\n                allure.attach(self.driver.get_screenshot_as_png(), name=f\"Failure_{username}\",\n                              attachment_type=AttachmentType.PNG)\n                assert False\n    \n        except Exception as e:\n            self.logger.error(f\"Unexpected error: {e}\")\n            allure.attach(self.driver.get_screenshot_as_png(), name=f\"Unexpected_Error_{username}\",\n                          attachment_type=AttachmentType.PNG)\n>           assert False\nE           assert False\n\ntestCases\\Data Driven Test\\test_004_DDT.py:63: AssertionError"}, "attachments": [{"name": "After_Login_test100@mailinator.com", "source": "adbc6cfa-e81e-4a1d-ab85-ec9e6f7c7a3f-attachment.png", "type": "image/png"}, {"name": "Failure_test100@mailinator.com", "source": "ae58f625-6fa0-4b1d-bab1-5b556e3505a3-attachment.png", "type": "image/png"}, {"name": "Unexpected_Error_test100@mailinator.com", "source": "65135ed1-96dd-4517-9b1e-c3e977415feb-attachment.png", "type": "image/png"}, {"name": "log", "source": "68481c31-2678-4bd7-9c04-931fc26509a1-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "username", "value": "'test100@mailinator.com'"}, {"name": "password", "value": "1243"}, {"name": "expected_result", "value": "'Invalid'"}], "start": 1740908092147, "stop": 1740908100525, "uuid": "0c06d72e-4fbb-4132-8105-57f70edb2748", "historyId": "7120903687640f5717da33b756534f6f", "testCaseId": "feaf2845cd517faac78063da184e07ae", "fullName": "testCases.Data Driven Test.test_004_DDT.Test_Data_Driven#test_data_driven_testing", "labels": [{"name": "parentSuite", "value": "testCases.Data Driven Test"}, {"name": "suite", "value": "test_004_DDT"}, {"name": "subSuite", "value": "Test_Data_Driven"}, {"name": "host", "value": "DESKTOP-DL1JSBI"}, {"name": "thread", "value": "2764-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.Data Driven Test.test_004_DDT"}]}