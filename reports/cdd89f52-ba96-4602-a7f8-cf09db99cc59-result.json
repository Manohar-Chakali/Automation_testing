{"name": "test_data_driven_testing[test100@mailinator.com-1243-Invalid]", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <testCases.test_004_DDT.Test_Data_Driven object at 0x00000193AB7E60D0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0b0412ad1c37e496874d78a8d9d28314\")>\nusername = 'test100@mailinator.com', password = 1243\nexpected_result = 'Invalid'\n\n    @pytest.mark.parametrize(\"username, password, expected_result\", get_exceldata(path, \"Sheet1\"))\n    def test_data_driven_testing(self, setup, username, password, expected_result):\n        self.logger.info(\"**** Setting up the browser ****\")\n    \n        self.driver = setup\n        self.driver.maximize_window()\n    \n        try:\n            # Navigate to Login Page\n            self.driver.get(self.baseurl)\n            self.hp = Homepage(self.driver)\n            self.hp.clickmyaccount()\n            self.hp.clicklogin()\n            self.ma = My_Account_page(self.driver)\n    \n        except Exception as e:\n            self.logger.error(f\"Error during navigation: {e}\")\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Error_Login_Page\", attachment_type=AttachmentType.PNG)\n            self.driver.quit()\n            assert False\n    \n        try:\n            # Perform Login\n            self.lp = Login(self.driver)\n            self.lp.click_email(username)\n            self.lp.click_password(password)\n            self.lp.click_login()\n    \n        except Exception as e:\n            self.logger.error(f\"Error during login execution: {e}\")\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Login_Execution_Error\", attachment_type=AttachmentType.PNG)\n            self.driver.quit()\n            assert False\n    \n        try:\n            # Initialize actual_result to avoid AttributeError\n            self.actual_result = self.lp.myaccount_page()\n    \n            if self.actual_result == expected_result:\n                self.logger.info(\n                    f\"Test Passed for {username}: Expected = {expected_result}, Got = {self.actual_result}\")\n                assert True\n            else:\n                self.logger.error(\n                    f\"Test Failed for {username}: Expected = {expected_result}, Got = {self.actual_result}\")\n                allure.attach(self.driver.get_screenshot_as_png(), name=\"Test_Failure\",\n                              attachment_type=AttachmentType.PNG)\n>               assert False\nE               assert False\n\ntestCases\\test_004_DDT.py:68: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testCases.test_004_DDT.Test_Data_Driven object at 0x00000193AB7E60D0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0b0412ad1c37e496874d78a8d9d28314\")>\nusername = 'test100@mailinator.com', password = 1243\nexpected_result = 'Invalid'\n\n    @pytest.mark.parametrize(\"username, password, expected_result\", get_exceldata(path, \"Sheet1\"))\n    def test_data_driven_testing(self, setup, username, password, expected_result):\n        self.logger.info(\"**** Setting up the browser ****\")\n    \n        self.driver = setup\n        self.driver.maximize_window()\n    \n        try:\n            # Navigate to Login Page\n            self.driver.get(self.baseurl)\n            self.hp = Homepage(self.driver)\n            self.hp.clickmyaccount()\n            self.hp.clicklogin()\n            self.ma = My_Account_page(self.driver)\n    \n        except Exception as e:\n            self.logger.error(f\"Error during navigation: {e}\")\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Error_Login_Page\", attachment_type=AttachmentType.PNG)\n            self.driver.quit()\n            assert False\n    \n        try:\n            # Perform Login\n            self.lp = Login(self.driver)\n            self.lp.click_email(username)\n            self.lp.click_password(password)\n            self.lp.click_login()\n    \n        except Exception as e:\n            self.logger.error(f\"Error during login execution: {e}\")\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Login_Execution_Error\", attachment_type=AttachmentType.PNG)\n            self.driver.quit()\n            assert False\n    \n        try:\n            # Initialize actual_result to avoid AttributeError\n            self.actual_result = self.lp.myaccount_page()\n    \n            if self.actual_result == expected_result:\n                self.logger.info(\n                    f\"Test Passed for {username}: Expected = {expected_result}, Got = {self.actual_result}\")\n                assert True\n            else:\n                self.logger.error(\n                    f\"Test Failed for {username}: Expected = {expected_result}, Got = {self.actual_result}\")\n                allure.attach(self.driver.get_screenshot_as_png(), name=\"Test_Failure\",\n                              attachment_type=AttachmentType.PNG)\n                assert False\n        except Exception as e:\n            self.logger.error(f\"Unexpected error during validation: {e}\")\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Unexpected_Error\",\n                          attachment_type=AttachmentType.PNG)\n>           assert False\nE           assert False\n\ntestCases\\test_004_DDT.py:73: AssertionError"}, "attachments": [{"name": "Test_Failure", "source": "24c399e7-9ee6-454b-8ddf-203360fb5206-attachment.png", "type": "image/png"}, {"name": "Unexpected_Error", "source": "e4f7a946-bad5-4211-83a8-34105ea3b113-attachment.png", "type": "image/png"}, {"name": "log", "source": "67d1e3eb-54ea-46fa-92c5-3b9efc5e7602-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "username", "value": "'test100@mailinator.com'"}, {"name": "password", "value": "1243"}, {"name": "expected_result", "value": "'Invalid'"}], "start": 1739906866525, "stop": 1739906880684, "uuid": "368bcf37-d039-47d5-be7c-e8cfc14c16eb", "historyId": "16c3a07b48578dd5590201184bedf050", "testCaseId": "83ce32365d8b1f41ecea7b8bf9856f52", "fullName": "testCases.test_004_DDT.Test_Data_Driven#test_data_driven_testing", "labels": [{"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_004_DDT"}, {"name": "subSuite", "value": "Test_Data_Driven"}, {"name": "host", "value": "DESKTOP-DL1JSBI"}, {"name": "thread", "value": "13764-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_004_DDT"}]}