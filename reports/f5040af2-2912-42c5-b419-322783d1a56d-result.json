{"name": "test_data_driven_testing[test200@mailinator.com-test@143-Valid]", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <test_004_DDT.Test_Data_Driven object at 0x00000190844EDEB0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cabc288eced1e06f7c07c5e50f63a033\")>, username = 'test200@mailinator.com'\npassword = 'test@143', expected_result = 'Valid'\n\n    @pytest.mark.parametrize(\"username, password, expected_result\", get_exceldata(path, \"Sheet1\"))\n    def test_data_driven_testing(self, setup, username, password, expected_result):\n        self.logger.info(f\"Starting test for: {username}\")\n    \n        self.driver = setup\n        self.driver.maximize_window()\n    \n        try:\n            # Navigate to Login Page\n            self.driver.get(self.baseurl)\n            self.hp = Homepage(self.driver)\n            self.hp.clickmyaccount()\n            self.hp.clicklogin()\n            self.ma = My_Account_page(self.driver)\n    \n            # Perform Login\n            self.lp = Login(self.driver)\n            self.lp.click_email(username)\n            self.lp.click_password(password)\n            self.lp.click_login()\n    \n            # Capture Screenshot after Login\n            allure.attach(self.driver.get_screenshot_as_png(), name=f\"After_Login_{username}\",\n                          attachment_type=AttachmentType.PNG)\n    \n            # Validate Result\n            self.actual_result = self.lp.myaccount_page()\n            self.logger.info(f\"Actual: {self.actual_result}, Expected: {expected_result}\")\n    \n            # Assert and Capture Failures\n            if self.actual_result.strip().lower() == expected_result.strip().lower():\n                self.logger.info(f\"Test Passed for {username}\")\n                assert True\n            else:\n                self.logger.error(f\"Test Failed for {username}\")\n                allure.attach(self.driver.get_screenshot_as_png(), name=f\"Failure_{username}\",\n                              attachment_type=AttachmentType.PNG)\n>               assert False\nE               assert False\n\ntestCases\\Data Driven Test\\test_004_DDT.py:57: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_004_DDT.Test_Data_Driven object at 0x00000190844EDEB0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cabc288eced1e06f7c07c5e50f63a033\")>, username = 'test200@mailinator.com'\npassword = 'test@143', expected_result = 'Valid'\n\n    @pytest.mark.parametrize(\"username, password, expected_result\", get_exceldata(path, \"Sheet1\"))\n    def test_data_driven_testing(self, setup, username, password, expected_result):\n        self.logger.info(f\"Starting test for: {username}\")\n    \n        self.driver = setup\n        self.driver.maximize_window()\n    \n        try:\n            # Navigate to Login Page\n            self.driver.get(self.baseurl)\n            self.hp = Homepage(self.driver)\n            self.hp.clickmyaccount()\n            self.hp.clicklogin()\n            self.ma = My_Account_page(self.driver)\n    \n            # Perform Login\n            self.lp = Login(self.driver)\n            self.lp.click_email(username)\n            self.lp.click_password(password)\n            self.lp.click_login()\n    \n            # Capture Screenshot after Login\n            allure.attach(self.driver.get_screenshot_as_png(), name=f\"After_Login_{username}\",\n                          attachment_type=AttachmentType.PNG)\n    \n            # Validate Result\n            self.actual_result = self.lp.myaccount_page()\n            self.logger.info(f\"Actual: {self.actual_result}, Expected: {expected_result}\")\n    \n            # Assert and Capture Failures\n            if self.actual_result.strip().lower() == expected_result.strip().lower():\n                self.logger.info(f\"Test Passed for {username}\")\n                assert True\n            else:\n                self.logger.error(f\"Test Failed for {username}\")\n                allure.attach(self.driver.get_screenshot_as_png(), name=f\"Failure_{username}\",\n                              attachment_type=AttachmentType.PNG)\n                assert False\n    \n        except Exception as e:\n            self.logger.error(f\"Unexpected error: {e}\")\n            allure.attach(self.driver.get_screenshot_as_png(), name=f\"Unexpected_Error_{username}\",\n                          attachment_type=AttachmentType.PNG)\n>           assert False\nE           assert False\n\ntestCases\\Data Driven Test\\test_004_DDT.py:63: AssertionError"}, "attachments": [{"name": "After_Login_test200@mailinator.com", "source": "90ae3f55-2298-4ede-bf99-cdf782909675-attachment.png", "type": "image/png"}, {"name": "Failure_test200@mailinator.com", "source": "4248411a-3ff1-4cd8-9bfb-be321bab9663-attachment.png", "type": "image/png"}, {"name": "Unexpected_Error_test200@mailinator.com", "source": "46bd1fc3-b02f-40cd-ba79-94e111900008-attachment.png", "type": "image/png"}, {"name": "log", "source": "c3a7fac2-3812-4396-9653-ffc4a17bef7a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "username", "value": "'test200@mailinator.com'"}, {"name": "password", "value": "'test@143'"}, {"name": "expected_result", "value": "'Valid'"}], "start": 1740908105036, "stop": 1740908114067, "uuid": "cf81bcb5-e6b9-410d-b0a8-6f8f07c5cdd3", "historyId": "4c0713b11890e5585cee9c6b1b01a0db", "testCaseId": "feaf2845cd517faac78063da184e07ae", "fullName": "testCases.Data Driven Test.test_004_DDT.Test_Data_Driven#test_data_driven_testing", "labels": [{"name": "parentSuite", "value": "testCases.Data Driven Test"}, {"name": "suite", "value": "test_004_DDT"}, {"name": "subSuite", "value": "Test_Data_Driven"}, {"name": "host", "value": "DESKTOP-DL1JSBI"}, {"name": "thread", "value": "2764-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.Data Driven Test.test_004_DDT"}]}