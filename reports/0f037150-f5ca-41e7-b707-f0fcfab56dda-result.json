{"name": "test_data_driven_testing[test200@mailinator.com-test@1431-Valid]", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <test_004_DDT.Test_Data_Driven object at 0x000001C7BF1219A0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ad4d4c0edf283d3238b030f33764b0de\")>, username = 'test200@mailinator.com'\npassword = 'test@1431', expected_result = 'Valid'\n\n    @pytest.mark.parametrize(\"username, password, expected_result\", get_exceldata(path, \"Sheet1\"))\n    def test_data_driven_testing(self, setup, username, password, expected_result):\n        self.logger.info(f\"Starting test for: {username}\")\n    \n        self.driver = setup\n        self.driver.maximize_window()\n    \n        try:\n            # Navigate to Login Page\n            self.driver.get(self.baseurl)\n            self.hp = Homepage(self.driver)\n            self.hp.clickmyaccount()\n            self.hp.clicklogin()\n            self.ma = My_Account_page(self.driver)\n    \n            # Perform Login\n            self.lp = Login(self.driver)\n            self.lp.click_email(username)\n            self.lp.click_password(password)\n            self.lp.click_login()\n    \n            # Capture Screenshot after Login\n            allure.attach(self.driver.get_screenshot_as_png(), name=f\"After_Login_{username}\",\n                          attachment_type=AttachmentType.PNG)\n    \n            # Validate Result\n            self.actual_result = self.lp.myaccount_page()\n            self.logger.info(f\"Actual: {self.actual_result}, Expected: {expected_result}\")\n            if self.actual_result.strip().lower() in [\"exceeded\",\"unknown\"]:\n                self.actual_result = \"Invalid\"\n            # Assert and Capture Failures\n            elif self.actual_result.strip().lower() == expected_result.strip().lower():\n                self.logger.info(f\"Test Passed for {username}\")\n                assert True\n            else:\n                self.logger.error(f\"Test Failed for {username}\")\n                allure.attach(self.driver.get_screenshot_as_png(), name=f\"Failure_{username}\",\n                              attachment_type=AttachmentType.PNG)\n>               assert False\nE               assert False\n\ntestCases\\Data Driven Test\\test_004_DDT.py:58: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_004_DDT.Test_Data_Driven object at 0x000001C7BF1219A0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ad4d4c0edf283d3238b030f33764b0de\")>, username = 'test200@mailinator.com'\npassword = 'test@1431', expected_result = 'Valid'\n\n    @pytest.mark.parametrize(\"username, password, expected_result\", get_exceldata(path, \"Sheet1\"))\n    def test_data_driven_testing(self, setup, username, password, expected_result):\n        self.logger.info(f\"Starting test for: {username}\")\n    \n        self.driver = setup\n        self.driver.maximize_window()\n    \n        try:\n            # Navigate to Login Page\n            self.driver.get(self.baseurl)\n            self.hp = Homepage(self.driver)\n            self.hp.clickmyaccount()\n            self.hp.clicklogin()\n            self.ma = My_Account_page(self.driver)\n    \n            # Perform Login\n            self.lp = Login(self.driver)\n            self.lp.click_email(username)\n            self.lp.click_password(password)\n            self.lp.click_login()\n    \n            # Capture Screenshot after Login\n            allure.attach(self.driver.get_screenshot_as_png(), name=f\"After_Login_{username}\",\n                          attachment_type=AttachmentType.PNG)\n    \n            # Validate Result\n            self.actual_result = self.lp.myaccount_page()\n            self.logger.info(f\"Actual: {self.actual_result}, Expected: {expected_result}\")\n            if self.actual_result.strip().lower() in [\"exceeded\",\"unknown\"]:\n                self.actual_result = \"Invalid\"\n            # Assert and Capture Failures\n            elif self.actual_result.strip().lower() == expected_result.strip().lower():\n                self.logger.info(f\"Test Passed for {username}\")\n                assert True\n            else:\n                self.logger.error(f\"Test Failed for {username}\")\n                allure.attach(self.driver.get_screenshot_as_png(), name=f\"Failure_{username}\",\n                              attachment_type=AttachmentType.PNG)\n                assert False\n    \n        except Exception as e:\n            self.logger.error(f\"Unexpected error: {e}\")\n            allure.attach(self.driver.get_screenshot_as_png(), name=f\"Unexpected_Error_{username}\",\n                          attachment_type=AttachmentType.PNG)\n>           assert False\nE           assert False\n\ntestCases\\Data Driven Test\\test_004_DDT.py:64: AssertionError"}, "attachments": [{"name": "After_Login_test200@mailinator.com", "source": "45952c03-0252-4e69-b5ab-58e27b066801-attachment.png", "type": "image/png"}, {"name": "Failure_test200@mailinator.com", "source": "a301c1da-876c-4fe0-a411-0b821231c68a-attachment.png", "type": "image/png"}, {"name": "Unexpected_Error_test200@mailinator.com", "source": "49e0e091-81fd-4df4-b622-8acb635ed8ad-attachment.png", "type": "image/png"}, {"name": "log", "source": "a4913a9a-3dfe-4241-b003-c68736267db4-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "username", "value": "'test200@mailinator.com'"}, {"name": "password", "value": "'test@1431'"}, {"name": "expected_result", "value": "'Valid'"}], "start": 1740911187609, "stop": 1740911190090, "uuid": "470390d1-d83f-49fe-a3c1-6d83c0f012cb", "historyId": "e3d38f9fcb0416ded19968bf451c38aa", "testCaseId": "feaf2845cd517faac78063da184e07ae", "fullName": "testCases.Data Driven Test.test_004_DDT.Test_Data_Driven#test_data_driven_testing", "labels": [{"name": "parentSuite", "value": "testCases.Data Driven Test"}, {"name": "suite", "value": "test_004_DDT"}, {"name": "subSuite", "value": "Test_Data_Driven"}, {"name": "host", "value": "DESKTOP-DL1JSBI"}, {"name": "thread", "value": "7316-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.Data Driven Test.test_004_DDT"}]}