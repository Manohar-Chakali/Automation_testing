<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="0" tests="2" time="79.447" timestamp="2025-03-18T23:49:56.313287+05:30" hostname="DESKTOP-DL1JSBI"><testcase classname="testCases.Logout Test Cases.test_TC_LG_003.Test_TC_LG_003" name="test_TC_LG_003" time="39.264" /><testcase classname="testCases.Logout Test Cases.test_TC_LG_004.Test_TC_LG_004" name="test_TC_LG_004" time="39.915"><failure message="assert False">self = &lt;test_TC_LG_004.Test_TC_LG_004 object at 0x000001D879617B10&gt;
setup = &lt;selenium.webdriver.chrome.webdriver.WebDriver (session="a933cb936d67adc24a664833aacaead3")&gt;

    def test_TC_LG_004(self, setup):
        self.driver = setup
        self.driver.get(self.baseurl)
        self.driver.maximize_window()
        self.logger.info("Application Started..........")
    
        try:
            # Step 1: Perform Login
            self.hp = Homepage(self.driver)
            self.hp.clickmyaccount()
            self.hp.clicklogin()
    
            self.lp = Login(self.driver)
            self.lp.click_email(Read_Commondata.get_useremail())
            self.lp.click_password(Read_Commondata.get_userpassword())
            self.lp.click_login()
    
            # Step 2: Validate Login Success
            self.myacc = self.lp.myaccount_page()
    
    
            if self.myacc.strip().lower() == "valid":
                self.logger.info(f"User {Read_Commondata.get_useremail()} logged in successfully")
                allure.attach(self.driver.get_screenshot_as_png(), name="After login: My Account page", attachment_type=AttachmentType.PNG)
    
                # Step 4: Validate Session Persistence
                self.ma = My_Account_page(self.driver)
                self.ma.click_myaccount()
    
    
                if self.ma.is_logout_visible():
                    self.logger.info("Session maintained successfully after reopening the browser")
                    allure.attach(self.driver.get_screenshot_as_png(), name="Session Maintained", attachment_type=AttachmentType.PNG)
                    self.ma.click_logout()
                    self.driver.back()
                    self.ma.click_myaccount()
                    if self.ma.is_logout_visible():
                        self.logger.info("Session maintained even after logout....so logging out ")
                        allure.attach(self.driver.get_screenshot_as_png(), name="Session maintained even after logout", attachment_type=AttachmentType.PNG)
                        self.ma.click_logout()
&gt;                       assert False
E                       assert False

testCases\Logout Test Cases\test_TC_LG_004.py:61: AssertionError

During handling of the above exception, another exception occurred:

self = &lt;test_TC_LG_004.Test_TC_LG_004 object at 0x000001D879617B10&gt;
setup = &lt;selenium.webdriver.chrome.webdriver.WebDriver (session="a933cb936d67adc24a664833aacaead3")&gt;

    def test_TC_LG_004(self, setup):
        self.driver = setup
        self.driver.get(self.baseurl)
        self.driver.maximize_window()
        self.logger.info("Application Started..........")
    
        try:
            # Step 1: Perform Login
            self.hp = Homepage(self.driver)
            self.hp.clickmyaccount()
            self.hp.clicklogin()
    
            self.lp = Login(self.driver)
            self.lp.click_email(Read_Commondata.get_useremail())
            self.lp.click_password(Read_Commondata.get_userpassword())
            self.lp.click_login()
    
            # Step 2: Validate Login Success
            self.myacc = self.lp.myaccount_page()
    
    
            if self.myacc.strip().lower() == "valid":
                self.logger.info(f"User {Read_Commondata.get_useremail()} logged in successfully")
                allure.attach(self.driver.get_screenshot_as_png(), name="After login: My Account page", attachment_type=AttachmentType.PNG)
    
                # Step 4: Validate Session Persistence
                self.ma = My_Account_page(self.driver)
                self.ma.click_myaccount()
    
    
                if self.ma.is_logout_visible():
                    self.logger.info("Session maintained successfully after reopening the browser")
                    allure.attach(self.driver.get_screenshot_as_png(), name="Session Maintained", attachment_type=AttachmentType.PNG)
                    self.ma.click_logout()
                    self.driver.back()
                    self.ma.click_myaccount()
                    if self.ma.is_logout_visible():
                        self.logger.info("Session maintained even after logout....so logging out ")
                        allure.attach(self.driver.get_screenshot_as_png(), name="Session maintained even after logout", attachment_type=AttachmentType.PNG)
                        self.ma.click_logout()
                        assert False
                    else:
                        allure.attach(self.driver.get_screenshot_as_png(), name="Session not maintained after logout",
                                      attachment_type=AttachmentType.PNG)
                        assert True
    
            else:
                self.logger.error("Login unsuccessful, cannot validate session persistence")
                allure.attach(self.driver.get_screenshot_as_png(), name="Login Failed", attachment_type=AttachmentType.PNG)
                assert False
    
        except Exception as e:
            self.logger.error(f"Error during navigation or login function: {e}")
            allure.attach(self.driver.get_screenshot_as_png(), name="Error occurred", attachment_type=AttachmentType.PNG)
&gt;           assert False
E           assert False

testCases\Logout Test Cases\test_TC_LG_004.py:75: AssertionError</failure></testcase></testsuite></testsuites>